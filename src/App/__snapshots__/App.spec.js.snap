// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Header />,
        <ButtonContainer
          favoritesCounter={Array []}
          fetchData={[Function]}
/>,
        <main
          className="mainArea"
>
          <div
                    className="scrollWrap"
          >
                    <TextCrawl />
          </div>
          <div
                    className="loadingWrap"
          >
                    <CardContainer
                              addFavorite={[Function]}
                              favorites={Array []}
                              people={Array []}
                              planets={Array []}
                              removeFavorite={[Function]}
                              vehicles={Array []}
                    />
          </div>
</main>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "favoritesCounter": Array [],
          "fetchData": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="scrollWrap"
>
              <TextCrawl />
</div>,
            <div
              className="loadingWrap"
>
              <CardContainer
                            addFavorite={[Function]}
                            favorites={Array []}
                            people={Array []}
                            planets={Array []}
                            removeFavorite={[Function]}
                            vehicles={Array []}
              />
</div>,
          ],
          "className": "mainArea",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextCrawl />,
              "className": "scrollWrap",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <CardContainer
                addFavorite={[Function]}
                favorites={Array []}
                people={Array []}
                planets={Array []}
                removeFavorite={[Function]}
                vehicles={Array []}
/>,
              "className": "loadingWrap",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "addFavorite": [Function],
                "favorites": Array [],
                "people": Array [],
                "planets": Array [],
                "removeFavorite": [Function],
                "vehicles": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "main",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Header />,
          <ButtonContainer
            favoritesCounter={Array []}
            fetchData={[Function]}
/>,
          <main
            className="mainArea"
>
            <div
                        className="scrollWrap"
            >
                        <TextCrawl />
            </div>
            <div
                        className="loadingWrap"
            >
                        <CardContainer
                                    addFavorite={[Function]}
                                    favorites={Array []}
                                    people={Array []}
                                    planets={Array []}
                                    removeFavorite={[Function]}
                                    vehicles={Array []}
                        />
            </div>
</main>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "favoritesCounter": Array [],
            "fetchData": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="scrollWrap"
>
                <TextCrawl />
</div>,
              <div
                className="loadingWrap"
>
                <CardContainer
                                addFavorite={[Function]}
                                favorites={Array []}
                                people={Array []}
                                planets={Array []}
                                removeFavorite={[Function]}
                                vehicles={Array []}
                />
</div>,
            ],
            "className": "mainArea",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TextCrawl />,
                "className": "scrollWrap",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <CardContainer
                  addFavorite={[Function]}
                  favorites={Array []}
                  people={Array []}
                  planets={Array []}
                  removeFavorite={[Function]}
                  vehicles={Array []}
/>,
                "className": "loadingWrap",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "addFavorite": [Function],
                  "favorites": Array [],
                  "people": Array [],
                  "planets": Array [],
                  "removeFavorite": [Function],
                  "vehicles": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "main",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
